<?php
/*  Task1:
Арман и Далида создали по одному приложению на nFactorial Incubator. Ментор инкубатора оценивает приложения, присуждая баллы по шкале от 1 до 100 по трем категориям: ясность приложения, оригинальность и сложность.

Рейтинг приложения Армана представляет собой тройку a = (a[0], a[1], a[2]), а рейтинг приложения Далиды представляет собой тройку b = (b[0], b[1], b [2]).

Задача состоит в том, чтобы найти их точки сравнения, сравнивая a[0] с b[0], a[1] с b[1] и a[2] с b[2].

Если a[i] > b[i], то Арман получает 1 очко. Если a[i] < b[i], то Далида получает 1 очко. Если a[i] = b[i], то ни один из участников не получает очко.

Точки сравнения или счёт — это общее количество очков, заработанных человеком.

Учитывая a и b, определите их соответствующие точки сравнения (счёт).

Пример

а = [1, 2, 3]
б = [3, 2, 1]

За элементы 0 Далида получает балл, потому что a[0] < b[0].

За равные элементы a[1] и b[1] баллы не начисляются.
Наконец, для элементов 2 a[2] > b[2], поэтому Арман получает балл.
Возвращаемый массив имеет вид [1, 1] с первым счетом Армана и вторым Далиды.

Описание функции

Напишите функцию compareApps в редакторе ниже.

compareApps имеет следующие параметры:

int a[3]: Оценка приложения Армана int b[3]: Оценка приложения Далиды.

Input Format

Первая строка содержит 3 целых числа, разделенных пробелом, a[0], a[1] и a[2] — соответствующие значениям баллов оценки приложения Армана. Вторая строка содержит 3 целых числа, разделенных пробелом, b[0], b[1] и b[2] — соответствующие значениям баллов оценки приложения Далиды.

Constraints

1 ≤ a[i] ≤ 100
1 ≤ b[i] ≤ 100
Output Format

int[2]: счёт Армана находится на первом индексе, а счёт Далиды — на втором.

Sample Input 0

5 6 7
3 6 10
Sample Output 0

1 1
Explanation 0

В этом примере:

a = (a[0], a[1], a[2]) = (5,6,7) b = (b[0], b[1], b[2]) = (3,6,10)

Теперь давайте сравним каждую отдельную оценку:

a[0] > b[0], поэтому Арман получает 1 очко a[1] = b[1], так что никто не получает очко a[2] < b[2], поэтомуДалида получает 1 очко

Счет Армана равен 1 и счет Далиды равен 1. Таким образом, мы возвращаем массив [1,1].

Sample Input 1

17 28 30
99 16 8
Sample Output 1

2 1
Explanation 1

Сравнивая нулевые элементы, Далида получает одно очко. Сравнивая первые и вторые элементы, Арман получает два очка. Возвращаемый массив [2,1].

 * Complete the 'compareApps' function below.
 *
 * The function is expected to return an INTEGER_ARRAY.
 * The function accepts following parameters:
 *  1. INTEGER_ARRAY a
 *  2. INTEGER_ARRAY b
 
$a = [17, 28, 30];
$b = [99, 16, 8];
function compareApps($a, $b) {
    $aScore=0;
    $bScore=0;
for($i=0; $i<3;$i++){

    if($a[$i]>$b[$i])
    {
        $aScore+=1;
    }
    elseif($a[$i]<$b[$i])
    {
        $bScore+=1;    
    }   
}
return array($aScore, $bScore);
}

print_r(compareApps($a,$b));

 Task2:
 У ментора инкубатора есть класс студентов. Разочарованный отсутствием их дисциплины, ментор решает отменять занятие, если на момент начала занятия присутствует меньше определенного количества студентов. Время прибытия варьируется от вовремя (arrivalTime ≤ 0) до опоздания (arrivalTime > 0).

Пример

n=5

k=3

a=[-2,-1,0,1,2]

Первые 3 ученика пришли вовремя. Последние 2 опоздали. Threshold (порог) - 3 студента, так что лекция будет продолжаться. Возвратите YES.

Примечание: Неположительное время прибытия (a[i] ≤ 0) указывает на то, что студент прибыл раньше или вовремя; положительное время прибытия (a[i] > 0) указывает на то, что студент опоздал на a[i] минут.

Описание функции

Выполните функцию helpMentor в редакторе ниже. Он должен возвращать YES, если занятие отменено, или NO в противном случае.

helpMentor имеет следующие параметры:

int k: пороговое количество студентов
int a[n]: время прибытия студентов
Input Format

Первая строка ввода содержит t - количество тестовых случаев.

Каждый тестовый пример состоит из двух строк.

Первая строка содержит два целых числа n и k, разделенных пробелом, соответствующие количествам студентов и threshold'у.

Во второй строке через пробел записаны n целых чисел (a[1], a[2],...,a[n]), описывающие время прихода каждого ученика.

Constraints

1 ≤ t ≤ 10
1 ≤ n ≤ 1000
1 ≤ k ≤ n
-100 ≤ a[i] ≤ 100, где i от 1 до n
Output Format

строка: либо YES, либо NO
Sample Input 0

2
4 3
-1 -3 4 2
4 2
0 -1 2 1
Sample Output 0

YES
NO
Explanation 0

В первом тесте k=3, то есть, ментор желает чтобы хотя бы три студента были в аудитории, но есть только два, которые пришли в моменты времени -3 и -1. Так что занятие отменяется.

Во втором тесте k=2, то есть, ментор желает чтобы хотя бы два студента были в аудитории и в ней находятся как раз двое со временем прибытия 0 и -1, так что занятие не будет отменено.
 * Complete the 'helpMentor' function below.
 *
 * The function is expected to return a STRING.
 * The function accepts following parameters:
 *  1. INTEGER k
 *  2. INTEGER_ARRAY a
$n=5;
$k=3;
$a=[-2,-1,0,1,2];
function helpMentor($k, $a) {
    $n=0;
    for($i=0;$i<count($a);$i++){
        if( $a[$i] <= 0 ){
            $n++;
            
        }
    }
    
    if($n >= $k){
        return "NO";
    }
    else {
        return "YES";
    }

}

print_r(helpMentor($k,$a));   

Task3:
В этом задании вам нужно определить, является ли строка забавной или нет. Чтобы определить, является ли строка забавной, создайте копию строки в обратном порядке, например abc->cba. Перебирая каждую строку, сравните абсолютную разницу в значениях ascii символов в позициях 0 и 1, 1 и 2 и так далее до конца. Если список абсолютных разниц одинаков для обеих строк, данная вам строка является забавной.

Пример

s = "lmnop"

Значения символов в строке равны [108, 109, 110, 111, 112].

s(reverse) = "ponml" и значения символов равны [112, 111, 110, 109, 108]. Абсолютная разница из смежных элементов для обеих строк являются [1, 1, 1, 1], итак, ответ - Funny

Input Format

Первая строка содержит целое число q - количество запросов. Каждая из следующих строк содержит строку - s.

Constraints

1 ≤ q ≤ 10
2 ≤ length of s ≤ 10000
Output Format

string: Funny или Not Funny

Sample Input 0

2
acxz
bcxz
Sample Output 0

Funny
Not Funny
* Complete the 'funnyString' function below.
 *
 * The function is expected to return a STRING.
 * The function accepts STRING s as parameter.
 $s="bcxz";
 function funnyString($s) {
    $s1=strrev($s);
    $str=[];
    $str1=[];
    for($i=0;$i<strlen($s)-1;$i++){
        $str[]=abs( ord($s[$i]) - ord($s[$i+1]) );
            $str1[]=abs( ord($s1[$i]) - ord($s1[$i+1]) );  
       
    }
      
          if($str == $str1){
              return "Funny";
}  else {
              return "Not Funny";
              
          }
      

}
print_r(funnyString($s));
*/
